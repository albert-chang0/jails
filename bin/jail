#!/usr/bin/bash
_CMD="$0"
_CMD_ABS="$(realpath "$_CMD")"
# shellcheck disable=SC2034
# nice to always have around
_ME="$(basename "$_CMD_ABS")"
_HOME="$(dirname "$_CMD_ABS")"
_LIB="${_HOME}/../lib/jails"

# shellcheck source=lib/jails/common
. "${_LIB}/common"

check_deps lsof sudo

format_num() {
  printf "%03d" "$1"
}

restore_owner() {
  local usb_dev="$1"
  local og="$2"

  touch "${owner_changer_flag}"
  chmod 0666 "${owner_changer_flag}"
  sleep 1
  while lsof "${owner_changer_flag}" &> /dev/null; do
    sleep 10
  done
  rm "${owner_changer_flag}" &> /dev/null
  chown "${og}" "${usb_dev}"
}

change_owner() {
  local usb_dev="$1"
  local new_owner="$2"
  local og

  og="$(stat -c %u:%g "${usb_dev}")"
  chown "${new_owner}" "${usb_dev}" || return 1
  restore_owner "${usb_dev}" "${og}" &
  return
}

if [ $# -ne 3 ]; then
  printf "usage: %s <type> <webcam_bus> <webcam_address>\n\n" "$_CMD"
  lsusb
  exit 1
fi

j_type="$1"
hostbus="$2"
hostaddr="$3"

f_hostbus="$(format_num "$hostbus")"
f_hostaddr="$(format_num "$hostaddr")"
overlay_loc="${overlay_run_dir}/${j_type}.cow"
type_base_img="${qemu_base_dir}/${j_type}.${kiosk_img}"

if [ ! -f "$type_base_img" ]; then
  printf "base image for %s not found; expected %s\n" "$j_type" "$type_base_img" >&2
  exit $EXIT_FAILURE_BASE_IMG_NOT_FOUND
fi

rm "$overlay_loc" &> /dev/null
qemu-img create -b "${type_base_img}" -F qcow2 -f qcow2 "$overlay_loc" &> /dev/null
ch_success=0
while :; do
  for _ in {1..3}; do
    if sudo bash -c "owner_changer_flag='${owner_changer_flag}'; $(declare -f restore_owner); $(declare -f change_owner); change_owner '/dev/bus/usb/${f_hostbus}/${f_hostaddr}' '$(id -u):$(id -g)'"; then
      while [ ! -e "${owner_changer_flag}" ]; do :; done
      sleep 0.1
      exec 5<> "${owner_changer_flag}"
      ch_success=1
      break
    fi
  done
  [ "$ch_success" -ne 0 ] && break
  sleep 600
done
qemu-system-x86_64 -enable-kvm -m 2G -nic "user,hostfwd=tcp::2000-:22" -vga virtio -audiodev pa,id=snd0 -device ich9-intel-hda -device hda-duplex,audiodev=snd0 -device usb-ehci,id=ehci -device "usb-host,bus=ehci.0,hostbus=${hostbus},hostaddr=${hostaddr}" -drive file="${overlay_loc},format=qcow2"
rm "$overlay_loc" &> /dev/null
